{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport React, { useState } from 'react';\nimport PrimaryButton from \"../components/PrimaryButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar StartGameScreen = function StartGameScreen(_ref) {\n  var onPickNumber = _ref.onPickNumber;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredNumber = _useState2[0],\n      setEnteredNumber = _useState2[1];\n\n  var numberInputHandler = function numberInputHandler(enteredText) {\n    setEnteredNumber(enteredText);\n  };\n\n  var resetInputHandler = function resetInputHandler() {\n    setEnteredNumber('');\n  };\n\n  return _jsxs(View, {\n    style: styles.inputContainer,\n    children: [_jsx(TextInput, {\n      style: styles.numberInput,\n      maxLength: 2,\n      keyboardType: \"number-pad\",\n      autoCapitalize: \"none\",\n      autoCorrect: false,\n      value: enteredNumber,\n      onChangeText: numberInputHandler\n    }), _jsxs(View, {\n      style: styles.buttonsContainer,\n      children: [_jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(PrimaryButton, {\n          onPress: resetInputHandler,\n          children: \"Reset\"\n        })\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(PrimaryButton, {\n          onPress: function onPress() {\n            var chosenNum = parseInt(enteredNumber);\n            console.log(chosenNum);\n\n            if (isNaN(chosenNum) || chosenNum <= 0 || chosenNum > 99) {\n              console.log(\"reached\");\n              Alert.alert(\"Invalid number!\", \"Number has to be a number between 1 and 99.\", [{\n                text: \"Okay\",\n                style: \"destructive\",\n                onPress: resetInputHandler\n              }]);\n            }\n\n            onPickNumber(chosenNum);\n            console.log(\"Valid number!\");\n          },\n          children: \"Confirm\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default StartGameScreen;\nvar styles = StyleSheet.create({\n  inputContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 100,\n    padding: 16,\n    backgroundColor: \"#\",\n    marginHorizontal: 24,\n    borderRadius: 8,\n    elevation: 4,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 6,\n    shadowOpacity: 0.25\n  },\n  numberInput: {\n    height: 50,\n    fontSize: 32,\n    borderBottomColor: \"#ddb52f\",\n    borderBottomWidth: 2,\n    color: \"#ddb52f\",\n    marginVertical: 8,\n    fontWeight: \"bold\",\n    width: 50,\n    textAlign: \"center\"\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n    alignSelf: \"stretch\"\n  },\n  buttonContainer: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","useState","PrimaryButton","StartGameScreen","onPickNumber","enteredNumber","setEnteredNumber","numberInputHandler","enteredText","resetInputHandler","styles","inputContainer","numberInput","buttonsContainer","buttonContainer","chosenNum","parseInt","console","log","isNaN","Alert","alert","text","style","onPress","StyleSheet","create","justifyContent","alignItems","marginTop","padding","backgroundColor","marginHorizontal","borderRadius","elevation","shadowColor","shadowOffset","width","height","shadowRadius","shadowOpacity","fontSize","borderBottomColor","borderBottomWidth","color","marginVertical","fontWeight","textAlign","flexDirection","alignSelf","flex"],"sources":["/Users/harshvardhan/Desktop/guess number game/screens/StartGameScreen.js"],"sourcesContent":["import { StyleSheet, Text, View, TextInput, Alert } from 'react-native'\nimport React,{useState} from 'react'\nimport PrimaryButton from '../components/PrimaryButton'\n\nconst StartGameScreen = ({onPickNumber}) => {\n    const [enteredNumber, setEnteredNumber] = useState('')\n\n    const numberInputHandler = (enteredText) => {\n        setEnteredNumber(enteredText)\n    }\n\n    const resetInputHandler = () => {\n        setEnteredNumber('')\n    }\n\n  return (\n    <View style={styles.inputContainer}>\n      <TextInput\n        style={styles.numberInput}\n        maxLength={2}\n        keyboardType=\"number-pad\"\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n        value={enteredNumber}\n        onChangeText={numberInputHandler}\n      />\n      <View style={styles.buttonsContainer}>\n        <View style={styles.buttonContainer}>\n          <PrimaryButton onPress={resetInputHandler}>Reset</PrimaryButton>\n        </View>\n        <View style={styles.buttonContainer}>\n          <PrimaryButton onPress={()=>{\n            const chosenNum = parseInt(enteredNumber)\n            console.log(chosenNum)\n            if(isNaN(chosenNum) || chosenNum <= 0 || chosenNum > 99){\n                //show alert\n                console.log(\"reached\")\n                Alert.alert(\n                  \"Invalid number!\",\n                  \"Number has to be a number between 1 and 99.\",\n                  [\n                    {\n                      text: \"Okay\",\n                      style: \"destructive\",\n                      onPress: resetInputHandler,\n                    },\n                  ]\n                ); \n            }\n            onPickNumber(chosenNum);          \n            console.log(\"Valid number!\")\n          }}>Confirm</PrimaryButton>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nexport default StartGameScreen\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 100,\n    padding: 16,\n    backgroundColor: \"#\",\n    marginHorizontal: 24,\n    borderRadius: 8,\n    elevation: 4,\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 6,\n    shadowOpacity: 0.25,\n  },\n  numberInput: {\n    height: 50,\n    fontSize: 32,\n    borderBottomColor: \"#ddb52f\",\n    borderBottomWidth: 2,\n    color: \"#ddb52f\",\n    marginVertical: 8,\n    fontWeight: \"bold\",\n    width: 50,\n    textAlign: \"center\",\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n    alignSelf: \"stretch\",\n  },\n  buttonContainer: {\n    flex: 1,\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}