{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from 'react';\nimport Title from \"../components/Title\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar GameScreen = function GameScreen(_ref) {\n  var userNumber = _ref.userNumber;\n  var initialGuess = generateRandomBetween(1, 100, userNumber);\n\n  var _useState = useState(initial),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  var generateRandomBetween = function generateRandomBetween(min, max, exclude) {\n    var rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n    if (rndNum === exclude) {\n      return generateRandomBetween(min, max, exclude);\n    } else {\n      return rndNum;\n    }\n  };\n\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Title, {\n      children: \"Opponent's Guess\"\n    }), _jsx(View, {\n      children: _jsx(Text, {\n        children: \"Higher or Lower?\"\n      })\n    })]\n  });\n};\n\nexport default GameScreen;\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 24\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#ddb52f',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","Title","GameScreen","userNumber","initialGuess","generateRandomBetween","initial","currentGuess","setCurrentGuess","min","max","exclude","rndNum","Math","floor","random","styles","screen","StyleSheet","create","flex","padding","title","fontSize","fontWeight","color","textAlign"],"sources":["/Users/harshvardhan/Desktop/guess number game/screens/GameScreen.js"],"sourcesContent":["import { StyleSheet, Text, View } from 'react-native'\nimport React,{useState} from 'react'\nimport Title from '../components/Title'\n\nconst GameScreen = ({userNumber}) => {\n  const initialGuess = generateRandomBetween(1, 100, userNumber)\n  const [currentGuess, setCurrentGuess] = useState(initial)\n\n  const generateRandomBetween = (min, max, exclude) => {\n    const rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n    if (rndNum === exclude) {\n      return generateRandomBetween(min, max, exclude);\n    } else {\n      return rndNum;\n    }\n  }\n  return (\n    <View style={styles.screen}>\n     <Title>Opponent's Guess</Title>\n      {/* GUESS */}\n      <View>\n        <Text>Higher or Lower?</Text>\n        {/* + - */}\n      </View>\n      {/* <View>LOG ROUNDS</View> */}\n    </View>\n  )\n}\n\nexport default GameScreen\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 24,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#ddb52f',\n    textAlign: 'center',\n  },\n})"],"mappings":";;;;AACA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,KAAP;;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAkB;EAAA,IAAhBC,UAAgB,QAAhBA,UAAgB;EACnC,IAAMC,YAAY,GAAGC,qBAAqB,CAAC,CAAD,EAAI,GAAJ,EAASF,UAAT,CAA1C;;EACA,gBAAwCH,QAAQ,CAACM,OAAD,CAAhD;EAAA;EAAA,IAAOC,YAAP;EAAA,IAAqBC,eAArB;;EAEA,IAAMH,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACI,GAAD,EAAMC,GAAN,EAAWC,OAAX,EAAuB;IACnD,IAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,GAAG,GAAGD,GAAvB,CAAX,IAA0CA,GAAzD;;IAEA,IAAIG,MAAM,KAAKD,OAAf,EAAwB;MACtB,OAAON,qBAAqB,CAACI,GAAD,EAAMC,GAAN,EAAWC,OAAX,CAA5B;IACD,CAFD,MAEO;MACL,OAAOC,MAAP;IACD;EACF,CARD;;EASA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEI,MAAM,CAACC,MAApB;IAAA,WACC,KAAC,KAAD;MAAA;IAAA,EADD,EAGE,KAAC,IAAD;MAAA,UACE,KAAC,IAAD;QAAA;MAAA;IADF,EAHF;EAAA,EADF;AAWD,CAxBD;;AA0BA,eAAef,UAAf;AAEA,IAAMc,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;EAC/BF,MAAM,EAAE;IACNG,IAAI,EAAE,CADA;IAENC,OAAO,EAAE;EAFH,CADuB;EAK/BC,KAAK,EAAE;IACLC,QAAQ,EAAE,EADL;IAELC,UAAU,EAAE,MAFP;IAGLC,KAAK,EAAE,SAHF;IAILC,SAAS,EAAE;EAJN;AALwB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}